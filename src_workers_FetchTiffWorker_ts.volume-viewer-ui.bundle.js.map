{"version":3,"file":"src_workers_FetchTiffWorker_ts.volume-viewer-ui.bundle.js","mappings":"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,CAACD,OAAD,EAAU,CAACA,OAAO,CAACvC,IAAR,CAAagB,MAAd,CAAV,CAAX;;UA1Ee;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAjB;;EAAA;IAAA;EAAA;AAAA;;;;;;;;;;AC3CA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;;;;WClCA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA,kBAAkB,qBAAqB;WACvC;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC3BA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,EAAE;WACF;;;;;WCRA;WACA;WACA;WACA;WACA;;;;;WCJA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WCfA;;WAEA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,aAAa;WACb;WACA;WACA;WACA;;WAEA;WACA;WACA;;WAEA;;WAEA;;;;;WCpCA;WACA;WACA;WACA;;;;;UEHA;UACA","sources":["webpack://@aics/volume-viewer/./src/workers/FetchTiffWorker.ts","webpack://@aics/volume-viewer/ignored|/home/runner/work/volume-viewer/volume-viewer/node_modules/geotiff/dist-module/source/client|http","webpack://@aics/volume-viewer/ignored|/home/runner/work/volume-viewer/volume-viewer/node_modules/geotiff/dist-module/source/client|https","webpack://@aics/volume-viewer/ignored|/home/runner/work/volume-viewer/volume-viewer/node_modules/geotiff/dist-module/source/client|url","webpack://@aics/volume-viewer/ignored|/home/runner/work/volume-viewer/volume-viewer/node_modules/geotiff/dist-module/source|fs","webpack://@aics/volume-viewer/webpack/bootstrap","webpack://@aics/volume-viewer/webpack/runtime/chunk loaded","webpack://@aics/volume-viewer/webpack/runtime/compat get default export","webpack://@aics/volume-viewer/webpack/runtime/define property getters","webpack://@aics/volume-viewer/webpack/runtime/ensure chunk","webpack://@aics/volume-viewer/webpack/runtime/get javascript chunk filename","webpack://@aics/volume-viewer/webpack/runtime/global","webpack://@aics/volume-viewer/webpack/runtime/hasOwnProperty shorthand","webpack://@aics/volume-viewer/webpack/runtime/make namespace object","webpack://@aics/volume-viewer/webpack/runtime/publicPath","webpack://@aics/volume-viewer/webpack/runtime/importScripts chunk loading","webpack://@aics/volume-viewer/webpack/runtime/startup chunk dependencies","webpack://@aics/volume-viewer/webpack/before-startup","webpack://@aics/volume-viewer/webpack/startup","webpack://@aics/volume-viewer/webpack/after-startup"],"sourcesContent":["import { fromUrl } from \"geotiff\";\n\ntype TypedArray =\n  | Uint8Array\n  | Int8Array\n  | Uint16Array\n  | Int16Array\n  | Uint32Array\n  | Int32Array\n  | Float32Array\n  | Float64Array;\n\n// from TIFF\nconst SAMPLEFORMAT_UINT = 1;\nconst SAMPLEFORMAT_INT = 2;\nconst SAMPLEFORMAT_IEEEFP = 3;\n\nfunction castToArray(buf: ArrayBuffer, bytesPerPixel: number, sampleFormat: number): TypedArray {\n  if (sampleFormat === SAMPLEFORMAT_IEEEFP) {\n    if (bytesPerPixel === 4) {\n      return new Float32Array(buf);\n    }\n  } else if (sampleFormat === SAMPLEFORMAT_INT) {\n    if (bytesPerPixel === 1) {\n      return new Int8Array(buf);\n    } else if (bytesPerPixel === 2) {\n      return new Int16Array(buf);\n    } else if (bytesPerPixel === 4) {\n      return new Int32Array(buf);\n    }\n  } else if (sampleFormat === SAMPLEFORMAT_UINT) {\n    if (bytesPerPixel === 1) {\n      return new Uint8Array(buf);\n    } else if (bytesPerPixel === 2) {\n      return new Uint16Array(buf);\n    } else if (bytesPerPixel === 4) {\n      return new Uint32Array(buf);\n    }\n  }\n  console.error(`TIFF Worker: unsupported sample format ${sampleFormat} and bytes per pixel ${bytesPerPixel}`);\n  return new Uint8Array(buf);\n}\n\nself.onmessage = async function (e) {\n  // TODO index images by time\n  // const time = e.data.time;\n\n  const channelIndex = e.data.channel;\n  const tilesizex = e.data.tilesizex;\n  const tilesizey = e.data.tilesizey;\n  const sizez = e.data.sizez;\n  const sizec = e.data.sizec;\n  const dimensionOrder = e.data.dimensionOrder;\n  const bytesPerSample = e.data.bytesPerSample;\n\n  const tiff = await fromUrl(e.data.url);\n\n  // load the images of this channel from the tiff\n  // today assume TCZYX so the slices are already in order.\n  let startindex = 0;\n  let incrementz = 1;\n  if (dimensionOrder === \"XYZCT\") {\n    // we have XYZCT which is the \"good\" case\n    // TCZYX\n    startindex = sizez * channelIndex;\n    incrementz = 1;\n  } else if (dimensionOrder === \"XYCZT\") {\n    // we have to loop differently to increment channels\n    // TZCYX\n    startindex = channelIndex;\n    incrementz = sizec;\n  }\n\n  // huge assumption: planes are in a particular order relative to z and c\n\n  // get first plane, to get some details about the image\n  const image = await tiff.getImage(startindex);\n  // on first image, set up some stuff:\n  const sampleFormat = image.getSampleFormat();\n  const bytesPerPixel = image.getBytesPerPixel();\n  // allocate a buffer for one channel\n  const buffer = new ArrayBuffer(tilesizex * tilesizey * sizez * bytesPerPixel);\n  const u8 = new Uint8Array(buffer);\n\n  for (let imageIndex = startindex, zslice = 0; zslice < sizez; imageIndex += incrementz, ++zslice) {\n    const image = await tiff.getImage(imageIndex);\n    // download and downsample on client\n    const result = await image.readRasters({ width: tilesizex, height: tilesizey });\n    const arrayresult: TypedArray = Array.isArray(result) ? result[0] : result;\n    // deposit in full channel array in the right place\n    const offset = zslice * tilesizex * tilesizey;\n    if (arrayresult.BYTES_PER_ELEMENT > 4) {\n      console.log(\"byte size not supported yet\");\n    } else if (arrayresult.BYTES_PER_ELEMENT !== bytesPerSample) {\n      console.log(\"tiff bytes per element mismatch with OME metadata\");\n    } else {\n      u8.set(new Uint8Array(arrayresult.buffer), offset * arrayresult.BYTES_PER_ELEMENT);\n    }\n  }\n  // all slices collected, now resample to 8 bits full data range\n  const src = castToArray(buffer, bytesPerPixel, sampleFormat);\n  let chmin = src[0];\n  let chmax = src[0];\n  for (let j = 0; j < src.length; ++j) {\n    const val = src[j];\n    if (val < chmin) {\n      chmin = val;\n    }\n    if (val > chmax) {\n      chmax = val;\n    }\n  }\n  const out = new Uint8Array(src.length);\n  for (let j = 0; j < src.length; ++j) {\n    out[j] = ((src[j] - chmin) / (chmax - chmin)) * 255;\n  }\n  const results = { data: out, channel: channelIndex };\n  postMessage(results, [results.data.buffer]);\n};\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [\"vendors-node_modules_babel_runtime_regenerator_index_js-node_modules_babel_runtime_helpers_es-31f4f7\"], () => (__webpack_require__(\"./src/workers/FetchTiffWorker.ts\")))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".volume-viewer-ui.bundle.js\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t\"src_workers_FetchTiffWorker_ts\": 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunk_aics_volume_viewer\"] = self[\"webpackChunk_aics_volume_viewer\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn __webpack_require__.e(\"vendors-node_modules_babel_runtime_regenerator_index_js-node_modules_babel_runtime_helpers_es-31f4f7\").then(next);\n};","","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n",""],"names":["fromUrl","SAMPLEFORMAT_UINT","SAMPLEFORMAT_INT","SAMPLEFORMAT_IEEEFP","castToArray","buf","bytesPerPixel","sampleFormat","Float32Array","Int8Array","Int16Array","Int32Array","Uint8Array","Uint16Array","Uint32Array","console","error","self","onmessage","e","channelIndex","data","channel","tilesizex","tilesizey","sizez","sizec","dimensionOrder","bytesPerSample","url","tiff","startindex","incrementz","getImage","image","getSampleFormat","getBytesPerPixel","buffer","ArrayBuffer","u8","imageIndex","zslice","readRasters","width","height","result","arrayresult","Array","isArray","offset","BYTES_PER_ELEMENT","log","set","src","chmin","chmax","j","length","val","out","results","postMessage"],"sourceRoot":""}